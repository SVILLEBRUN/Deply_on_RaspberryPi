# Docker Compose pour un environnement de développement
# Modifier pour qu'il puisse gérer les différents Dockerfile et build les images localement
# TODO: 
# - Vérifier les chemins d'accès aux fichiers Dockerfile et autre => OK
# - Ajouter nginx

networks:
    my-apps-network:
        driver: bridge


services:
    nginx:
        image: nginx:latest
        container_name: nginx
        ports:
            - "80:80"
        restart: always
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
            - ./index.html:/usr/share/nginx/html/index.html
        networks:
            - my-apps-network

    proxy:
        container_name: proxy
        build:
            context: ../proxy
            target: 'production-stage'
        ports:
            - "5000"
        restart: always
        volumes:
            - ../proxy:/app
        networks:
            - my-apps-network

    movie-db-vue:
        container_name: movie-db-vue
        build:
            context: ../Movie_db_app/movie-db-vue
            target: 'production-stage'
        ports:
            - "8080"
        restart: always
        volumes:
            - ../Movie_db_app/movie-db-vue:/app
        networks:
            - my-apps-network

    movie-db-core-api:
        container_name: movie-db-core-api
        build:
            context: ../Movie_db_app/movie-db-core-api
            target: 'production-stage'
        ports:
            - "3000"
        restart: always
        volumes:
            - ../Movie_db_app/movie-db-core-api:/app
        networks:
            - my-apps-network

    airjewels-db:
        image: postgres:latest
        container_name: airjewels-db
        restart: always
        volumes:
            - airjewels-db-data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            - my-apps-network
        env_file:
            - .env

    airjewels-rails:
        container_name: airjewels-rails
        build:
            context: ../airjewels-rails
            args:
                SECRET_KEY_BASE: ${SECRET_KEY_BASE}
        command: ./bin/rails s -b '0.0.0.0' -p 3001
        ports:
            - "3001:3001"
        depends_on:
            - airjewels-db
        volumes:
            - airjewels-app-storage:/rails/storage
        networks:
            - my-apps-network
        env_file:
            - .env

volumes:
    airjewels-db-data: 
        name: airjewels-db-data
    airjewels-app-storage:
        name: airjewels-app-storage